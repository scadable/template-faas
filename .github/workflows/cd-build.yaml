name: CD - Build & Push Image

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - "function/**"
      - "requirements.txt"
      - "Dockerfile"
      - ".github/workflows/cd-build.yaml"

permissions:
  contents: read
  packages: write

concurrency:
  group: cd-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      # Build only for linux/amd64 as requested
      DOCKER_BUILD_PLATFORMS: linux/amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check required secrets
        run: |
          test -n "${{ secrets.REGISTRY_URL }}"        || (echo "Missing secret: REGISTRY_URL" && exit 1)
          test -n "${{ secrets.REGISTRY_USERNAME }}"   || (echo "Missing secret: REGISTRY_USERNAME" && exit 1)
          test -n "${{ secrets.REGISTRY_PASSWORD }}"   || (echo "Missing secret: REGISTRY_PASSWORD" && exit 1)

      - name: Set up QEMU (not strictly required for amd64, but harmless)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Compute image reference
        id: ref
        shell: bash
        run: |
          REGISTRY="${{ secrets.REGISTRY_URL }}"
          NAMESPACE="${{ secrets.REGISTRY_NAMESPACE }}"
          NAME="${{ secrets.IMAGE_NAME }}"
          if [ -z "$NAMESPACE" ]; then NAMESPACE="${{ github.repository_owner }}"; fi
          if [ -z "$NAME" ]; then NAME="${{ github.event.repository.name }}"; fi
          IMAGE_REF="$(echo "${REGISTRY}/${NAMESPACE}/${NAME}" | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE_REF=${IMAGE_REF}"
          echo "IMAGE_REF=${IMAGE_REF}" >> "$GITHUB_OUTPUT"

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.ref.outputs.IMAGE_REF }}
          tags: |
            # latest on default branch (main)
            type=raw,value=latest,enable={{is_default_branch}}
            # commit SHA tag
            type=sha,format=short
            # support pushing on Git tags too (v1.2.3 => tag v1.2.3)
            type=ref,event=tag

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
